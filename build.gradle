buildscript {
	ext {
		kotlinVersion = '1.2.71'
		springBootVersion = '2.1.4.RELEASE'
	}
}

plugins {
	id "org.jetbrains.kotlin.jvm" version "1.2.71"
	id "org.jetbrains.kotlin.plugin.spring" version "1.2.71"
	id "jacoco"
	id "org.springframework.boot" version "2.1.4.RELEASE"
	id "io.spring.dependency-management" version "1.0.6.RELEASE"
	id "com.palantir.docker" version "0.20.1"
}

repositories {
	mavenCentral()
}

version = System.getenv("BUILD_NUMBER") ?: "9.0.0-SNAPSHOT"
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

dependencies {
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.micrometer:micrometer-registry-prometheus')

	compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.5')

	runtime('org.springframework.boot:spring-boot-devtools')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.nhaarman:mockito-kotlin:1.5.0')
	testCompile('com.natpryce:hamkrest:1.6.0.0')
}

project.extensions.jacocoExecFileName = "$rootProject.buildDir/jacoco/exec/test.exec"

test {
	jacoco {
		destinationFile = file(rootProject.jacocoExecFileName)
	}
}

docker {
	name "brontofundus-example-service:$version"
	tags 'latest'
	dependsOn build
	files tasks.jar.outputs
	buildArgs([JARFILE: jar.archiveFileName.get(), VERSION: version])
}

task printJacacoInfoForTeamcity {
	doLast {
		def classpath = '+:build/classes/kotlin/main/**'
		def includes = 'ch.brontofundus.service.example.*'
		println("##teamcity[jacocoReport dataPath='$project.extensions.jacocoExecFileName' includes='$includes'  classpath='$classpath']")
	}
}
